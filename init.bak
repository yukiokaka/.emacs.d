(server-start)

(setq load-path (cons "~/.emacs.d/elisp" load-path))
(show-paren-mode t)

(setq tab-width 4)
(setq indent-tabs-mode nil)

(require 'auto-install)
(setq auto-install-directory "~/.emacs.d/elisp/")
;(auto-install-update-emacswiki-package-name t)
(auto-install-compatibility-setup)



;auto-completeの設定
(require 'auto-complete)
(global-auto-complete-mode t)
;; 辞書保存
(setq ac-comphist-file "~/.emacs.d/elisp/auto-complete-dics/auto-dics")
(setq ac-dictionary-directories "~/.emacs.d/elisp/auto-complete-dics/")

;;mozcの設定
(add-to-list 'load-path"/usr/share/emacs/23.4/site-lisp/emacs-mozc" )
(require 'mozc)
(set-language-environment "japanese")
(setq default-input-method "japanese-mozc")
(setq mozc-candidate-style 'echo-area)

;言語設定
(set-language-environment 'Japanese)
;; Coding system.
(set-default-coding-systems 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-buffer-file-coding-system 'utf-8)
(prefer-coding-system 'utf-8)

;anything
(require 'anything)
(require 'anything-config)
(require 'anything-match-plugin)

(global-set-key (kbd "C-x C-g") 'anything)

; yatex-modeに関する設定
; エンコーディングをutf-8にする。＠yatex
(setq YaTeX-kanji-code 4)
(setq YaTeX-use-LaTeX2e t)
(setq YaTeX-use-AMS-LaTeX t)
(setq tex-command "platex")
(setq YaTeX-dvipdf-command "dvipdfmx")
(setq auto-mode-alist
      (cons (cons "\\.tex$" 'yatex-mode) auto-mode-alist))
(autoload 'yatex-mode "yatex" "Yet Another LaTeX mode" t)
(setq load-path (cons (expand-file-name "/usr/local/share/emacs/site-lisp/yatex") load-path))
(setq dvi2-command "open")
(setq dvi2-command "evince")
(setq YaTeX-typeset-auto-rerun nil)

; C-c tj でpdfまで作成。platex2pdfにスクリプトが入ってる。＠yatex
(setq tex-command "sh ~/.emacs.d/dvipdfmx_output")


;初期画面いらない
(setq inhibit-startup-message t)

;; savehist
 (setq savehist-file "~/.emacs.d/cache/savehist/history")



;色設定
  (custom-set-faces
     '(default ((t
                 (:background "black" :foreground "white")
                                            )))
     '(cursor ((((class color)
                  (background dark))
                   (:background "white"))
;                  (:background "#00AA00"))
                 (((class color)
                     (background light))
                     (:background "#999999"))
                 (t ())
                 )))

;透過については~/.Xresourcesに記載
;xrdb ~/.Xresources
;; フレームの透明度
(set-frame-parameter (selected-frame) 'alpha '(85 50))
(add-to-list 'default-frame-alist '(alpha 85 50))

;; Set transparency of emacs
(defun transparency (value)
  "Sets the transparency of the frame window. 0=transparent/100=opaque"
  (interactive "nTransparency Value 0 - 100 opaque:")
  (set-frame-parameter (selected-frame) 'alpha value))


(setq-default c-basic-offset 4     ;;基本インデント量4
              tab-width 4          ;;タブ幅4
              indent-tabs-mode nil)  ;;インデントをタブでするかスペースでするか
;;タブは2文字ごとに
;;;;追加　タブの設定は以下のようにしないとだめ
(setq-default tab-stop-list
     '(0 1 2 3 4 6 8 12 16 20))
(setq indent-tabs-mode 4)


;文字設定
(add-to-list 'default-frame-alist '(font . "ricty-12"))

;コメントアウト用コマンド
(add-hook 'c++-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'c-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'scheme-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'emacs-lisp-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'lisp-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'python-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'ruby-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
(add-hook 'java-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))

(define-key global-map (kbd "C-;") 'hs-toggle-hiding)

; globalなC-zを無効化
(global-unset-key "\C-z")
